function params = setupEyelink(params)
% setupEyelink sets all standard defaults for eyelink used by Shadlen Lab.
%
% Now includes all values that can be changed by the operator.
%
% Many other values are set in .ini files.
%
% Assumes eyelink is already initialized.
%
% Requires a 'cal' argument in the params structure. which gives
% calibration.
%
% Second optional argument is a structure.
%
% Takes in and returns a field 'eyelinkSettings' in the params structure.

%
% 6/6/01	jp Begun SetEyeLinkDefaults based on testcalib and testcalls
% 6/19/02	jp Renamed EXSetEyeLinkDefaults and included with other EX routines
%			added several commands, fixed head camera cammand (no = )
% 8/2/06    pbm rewrote, returns struct with all the values set, and arg can
%           override those values
    physcoords = (params.cal.rect - params.cal.rect([3 4 3 4])/2) .* params.cal.spacing([1 2 1 2]) .* 10;

    settings = struct...
        ( 'corneal_mode', 'YES' ...
        , 'active_eye', 'LEFT'...
        ... %, 'binocular_enabled', 'NO'...
        , 'current_camera', 'LEFT'...
        , 'aux_mouse_simulation', 'NO'...
        , 'use_high_speed', 'YES' ...
        , 'sample_rate', 1000 ...
        ...
        , 'horizontal_target_y', (params.cal.rect(4)-params.cal.rect(2))/2 ...
        , 'calibration_type', 'HV9' ...
        , 'randomize_calibration_order', 'YES' ...	% YES default
        , 'randomize_validation_order', 'YES' ... 	% YES default
        , 'calibration_collection_interval', 100 ...
        ...
        , 'x_gaze_constraint', 'AUTO' ...
        , 'y_gaze_constraint', 'AUTO' ...
        , 'enable_automatic_calibration', 'YES' ...	% YES default
        , 'automatic_calibration_pacing', 1000 ...	% 1000 ms default
        ...
        , 'screen_pixel_coords', sprintf('%d %d %d %d', params.cal.rect) ...
        , 'screen_phys_coords', sprintf('%d %d %d %d', physcoords) ...
        , 'screen_distance', sprintf('%.1f ', sqrt((params.cal.distance*[10 10]).^2 + (physcoords(4) - physcoords(2)).^2)) ...
        , 'screen_write_prescale', 10 ...
        , 'velocity_write_prescale', 10 ...
        ...
        , 'head_subsample_rate', 0 ...
        , 'heuristic_filter', '0 0' ...               % NO FILE FILTER ffs.
        , 'pupil_size_diameter', 'NO' ...             % no for pupil area (yes for dia)
        ...%, 'simulate_head_camera', 'NO' ...            % NO to use head camera
        , 'simulation_screen_distance', params.cal.distance * 10 ...
        ...
        , 'file_sample_data', 'GAZE,GAZERES,PUPIL,AREA,STATUS' ...
        , 'file_event_data', 'GAZE,GAZERES,AREA,VELOCITY' ...
        , 'file_event_filter', 'LEFT,RIGHT,FIXATION,BLINK,BUTTON,SACCADE' ...
        ...
        , 'link_sample_data', 'GAZE,STATUS' ...
        , 'link_event_data', 'GAZE,STATUS' ...
        , 'link_event_filter', 'LEFT,RIGHT,FIXATION,BLINK,BUTTON,SACCADE' ...
        , 'recording_parse_type', 'GAZE' ...
        ...
        , 'select_parser_configuration', 1 ... %high sensitivity 
        ...
        , 'analog_out_data_type', 'OFF' ...           % YES default
        );

    
    if isfield(params, 'eyelinkSettings')
        settings = namedargs(settings, params.eyelinkSettings);
    end
    
    if Eyelink('isconnected') == 0, 				% make sure it is connected
        error('Error in setupEyelink:  Eyelink not connected');
    end;

    %FIXME: eyelink does not return status
    %status = Eyelink('command', 'clear_screen 0');	% initialize screen on operater PC
    Eyelink('command', 'clear_screen 0');	% initialize screen on operater PC

    Eyelink('StartSetup'); %sample rate doesn't change unless do this. Hmph.
    
    for f = fieldnames(settings)'
        field = f{:}; %strip field out of cell
        %note: num2str('string') returns the same string
        commandstring = sprintf('%s = %s', field, num2str(settings.(field)));

        status = Eyelink('Command', commandstring);
        if (status < 0)
            error('setupEyelink:badStatus', 'Status %d sending command "%s"',...
                status, commandstring);
        end
    end

    params.eyelinkSettings = settings;
    
    params.eyeSampleRate = params.eyelinkSettings.sample_rate;
end
