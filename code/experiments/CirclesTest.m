function CirclesTest(varargin)
    params = struct...
        ( 'edfname',    '' ...
        , 'dummy',      1  ...
        , 'skipFrames', 0  ...
        , 'requireCalibration', 0 ...
        , 'density', 0.5 ...
        );
    params = namedargs(params, varargin{:});

    c = CircularMotionProcess;
    require(setupEyelinkExperiment(params), @runDemo)
    function runDemo(params)
        
        patch = CauchyPatch...
            ( 'velocity', 5 ...
            , 'size', [0.5 0.75 0.1]...
            );
        
        radius = 4;
        n = 6; %number going each way
        separation = [18 11]; %
        dx = 0.75;
        dt = 0.15;
        
        phases = (1:n) * 2 * pi / n;
        times = (0:n-1) * dt/n;
        
        circle1 = CircularMotionProcess ...
            ( 'radius', radius ...
            , 'dt', dt ...
            , 'x', separation(1)/2 ...
            , 'y', separation(2)/2 ...
            , 'dphase', dx / radius ...
            , 'phase', phases ...
            , 'angle', 90 + phases * 180 / pi ...
            , 'color', [0.5 0.5 0.5] ...
            , 't', times ...
            );
        
        circle2 = CircularMotionProcess ...
            ( 'radius', radius ...
            , 'dt', dt ...
            , 'x', -separation(1)/2 ...
            , 'y', -separation(2)/2 ...
            , 'dphase', dx / radius ...
            , 'phase', phases ...
            , 'angle', -90 + phases * 180 / pi ...
            , 'color', [0.5 0.5 0.5] ...
            , 't', times ... % sort(rand(1, n)) * dt ...
            );

        dots = ComboProcess(circle1, circle2);
        
        sprites = SpritePlayer(patch, dots);
        
        bar = FilledBar('x', 0, 'y', 0, 'length', 2, 'width', 0.1, 'angle', 45, 'color', 255);

        fixation1 = FilledDisk(separation/2, 0.1, 0);
        fixation2 = FilledDisk(-separation/2, 0.1, 0);
        
        startTrigger = UpdateTrigger(@start);
        orientTrigger = UpdateTrigger(@orient);
        
        main = mainLoop ...
            ( {sprites, fixation1, fixation2, bar} ...
            , {startTrigger, orientTrigger} ...
            );
        
        params = main.go(params);
        
        function start(x, y, t, next)
            sprites.setVisible(1, next);
            fixation1.setVisible(1);
            fixation2.setVisible(1);
            %bar.setVisible(1);
            startTrigger.unset();
        end
        
        function orient(x, y, t, next)
            a = circle1.getAngle();
            bar.setAngle(a(1));
        end
        
    end
end