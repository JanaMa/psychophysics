function e = GloloSaccade(varargin)
    e = Experiment(varargin{:});
    
    e.trials.base = GloloSaccadeTrial...
        ( 'fixationOnset', 0 ...
        , 'fixationTime', Inf ...
        , 'fixationLatency', 1.0 ...
        , 'fixationStartWindow', 3 ...
        , 'fixationSettle', 0.4 ...
        , 'fixationWindow', 1.5 ...
        , 'targetOnset', 0.25 ...
        , 'target', FilledDisk...
            ( 'loc', CircularMotion ...
                ( 'radius', 8 ...
                , 'omega', 0 ...
                , 'phase', 0 ...
                )...
            , 'radius', 0.2 ...
            , 'color', 0 ...
            ) ...
        , 'useTrackingTarget', 1 ...
        , 'trackingTarget', CauchySpritePlayer ...
            ('process', CircularCauchyMotion ...
                ( 'radius', 8 ...
                , 'phase', 0 ...
                , 'dt', 0.15 ...
                , 'dphase', 0 ...
                , 'color', [0.5 0.5 0.5]' ...
                , 'velocity', 0 ...
                , 'wavelength', 1 ...
                , 'width', 1 ...
                , 'duration', 0.1 ...
                , 'order', 4 ...
                ) ...
            ) ...
        , 'blankTime', Inf ...
        , 'cueTime', 0.5 ...
        , 'maxLatency', 0.5 ...
        , 'maxTransitTime', 0.2 ...
        , 'targetWindow', 6 ...
        , 'rewardSize', 100 ...
        , 'rewardTargetBonus', 0.0 ...
        , 'errorTimeout', 0.5 ...
        );
    
    e.trials.add('target.loc.phase', UniformDistribution('lower', 0, 'upper', 2*pi));
    e.trials.add('trackingTarget.process.phase', @(b) b.target.loc.phase);
    e.trials.add('trackingTarget.process.angle', @(b) b.target.loc.phase * 180/pi + 90);

    e.trials.add({'target.loc.omega', 'trackingTarget.process.dphase'}, {{-10/8 -10/8*.15} {10/8 10/8*.15}});
    e.trials.add('trackingTarget.process.velocity', [-10 10]);
    %    e.trials.add('target.loc.omega' 

    %target tracking time
    e.trials.add('targetFixationTime', ExponentialDistribution('offset', 0.4, 'tau', 0.2));
    
    %begin with an eye calibration and again every 10 minutes...
    e.trials.blockSize = 200;
    e.trials.blockTrial = EyeCalibrationMessageTrial();
    e.trials.blockTrial.base.absoluteWindow = 100;
    e.trials.blockTrial.base.maxLatency = 0.5;
    
    e.trials.blockTrial.base.fixDuration = 0.5;
    e.trials.blockTrial.base.fixWindow = 4;
    e.trials.blockTrial.base.rewardDuration = 100;
    e.trials.blockTrial.base.settleTime = 0.3;
    e.trials.blockTrial.base.targetRadius = 0.2;
    e.trials.blockTrial.base.onset = 0;
    e.trials.blockTrial.maxStderr = 0.5;
    e.trials.blockTrial.minN = 20;
    e.trials.blockTrial.maxN = 20;
    e.trials.blockTrial.interTrialInterval = 0.4;
end
