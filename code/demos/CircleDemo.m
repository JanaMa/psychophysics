function this = CircleDemo(varargin)
    n = 40;
    speed = 10;
    radius = 10;
    wavelength = 0.75;
    speed_adj = 0.78; %this value determined by adjustment. Depends on
                      %speed and eccetricity in a strange way though.
    motion = CircularSmoothCauchyMotion...
        ( 'omega', 1/radius*speed ...
        , 'radius', radius ...
        , 'angle', ((1:n)) * 360/n + 90  ...
        , 'color', repmat([0.5;0.5;0.5] / sqrt(2), 1, n) ...
        , 'phase', (1:n) * 2*pi/n ...
        , 'localPhase', zeros(1, n) ...
        , 'localOmega', speed*2*pi/wavelength*speed_adj ...
        , 'width', (0.5) ...
        , 'wavelength', 0.75 ...
        , 'order', repmat(4, 1, n) ...
        );

    n = 5;
    grating = DummyCircularGratingSource...
              ( 'loc', repmat([0;0], 1, n) ...
              , 'lobes', 6*(0:n-1) + 1 ...
              , 'omega', 2*pi ...
              , 'radius', 2*(0:n-1)+0.5 ...
              , 'width', 1 ...
              , 'color', repmat([0.5;0.5;0.5], 1, n) ...
              );

    fixation = FilledDisk([0;0], 0.1, 'visible', 1);

    kb_ = KeyDown();
    drawer_ = CauchyDrawer('source', {motion}, 'visible', 1);
    drawer2_ = CircularGratingDrawer('source', {grating}, 'visible', 1);

    persistent init__;
    this = autoobject(varargin{:});

    function params = run(params)
        main = mainLoop...
            ( 'input', {params.input.keyboard} ...
            , 'graphics', {fixation, drawer2_} ...
            , 'triggers', {kb_} ...
            );

        kb_.set(main.stop, 'ESCAPE');

        params = main.go(params);
    end

    %    playDemo(this, 'skipFrames', 0, varargin{:});
    playDemo(this, varargin{:});
end
