function PhaseDemo% PhaseDemo shows targets for phase discrimination in the periphery.% Each target consists of f plus 2f. The phase of 2f, relative to f, % differs by 180 deg in the two targets (left and right).%% See also GratingDemo, DriftDemo, EpsDemo.% 1/7/04 dgp Wrote it, based on GratingDemo.c1=0.2;c2=0.1;phase=[0 180 90 270];offset=100;% windowwhichScreen=0;window=Screen(whichScreen,'OpenWindow',[],[],8);white=WhiteIndex(window);black=BlackIndex(window);gray=(white+black)/2;inc=white-gray;Screen(window,'FillRect',gray);radius=0.3; % gaussian 1/2-peak radius% radius=1; % gaussian 1/2-peak radiusfor i=1:length(phase)	% grating	[x,y]=meshgrid(-100:100,-100:100);	orientation=0; % tilt (deg)	f=0.03; % spatial frequency (cycles/pixel)	lambda=(radius/0.7)/f; % gaussian space constant (pixels), 1/e-peak radius	a=cos(orientation*pi/180)*2*pi*f;	b=sin(orientation*pi/180)*2*pi*f;	m=exp(-((x/lambda).^2)-((y/lambda).^2)).*(c1*cos(a*x+b*y)+c2*cos(2*a*x+2*b*y+phase(i)*pi/180));	r=[0 0 size(x,2) size(x,1)];	rect=Screen(window,'Rect');	r=CenterRect(r,rect);	switch(i)	case 1;		r=OffsetRect(r,-offset,-100);	case 2;		r=OffsetRect(r,offset,-100);	case 3;		r=OffsetRect(r,-offset,100);	case 4;		r=OffsetRect(r,offset,100);	end	Screen(window,'PutImage',gray+inc*m,r);	r=[0 0 2 2];	r=CenterRect(r,rect);	r=OffsetRect(r,0,-100);	Screen(window,'FillRect',black,r);	r=CenterRect(r,rect);	r=OffsetRect(r,0,100);	Screen(window,'FillRect',black,r);end% Save image to disk.cd(diskroot);if IsOS9	cd(DesktopFolder);endpageRect=rect.*[1,-1,1,-1];% convert from Apple to Adobe coordinates% Win: Screen 'SaveAsEps' is not yet available so% we use SaveAsEps.m instead.  if IsWin	psimg = Screen(window,'GetImage',rect);	SaveAsEps('phase.eps',psimg,pageRect);else	Screen(window,'SaveAsEps','phase.eps',rect,pageRect);end% pauseScreen(window,'TextFont','Arial');Screen(window,'TextSize',18);Ask(window,'Done. Hit return to quit.',black,gray,'GetString');Screen(window,'Close');