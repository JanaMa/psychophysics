function [] = pmcfg(varargin)

if nargin == 0;
  h0 = get(0,'children');
  exist = 0;
  for h = h0'
    if strcmp(get(h,'tag'),'spawner');
      figure(h); % bring it up front!
      exist = 1;
    end
  end
  if ~exist
    if ~pmis
      pmopen([],'d',[]);
    end
    
  %%	'Position',[54 87 560 420], ...

h0 = figure('Units','points', ...
	'Color',[0.8 0.8 0.8], ...
	'FileName','pmcfggui.m', ...
	'MenuBar','none', ...
	'Name','Parallel Matlab System Configuration', ...
	'NumberTitle','off', ...
	'PaperPosition',[18 180 576 432], ...
	'PaperUnits','points', ...
	'Position',[54 87 448 336], ...
	'Tag','spawner', ...
	'ToolBar','none', ...
	'UserData','[ ]');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'ListboxTop',0, ...
	'Position',[8 224 212 104], ...
	'Style','frame', ...
	'Tag','Frame1');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Position',[12 228 152 80], ...
	'String',' ', ...
	'Style','listbox', ...
	'Tag','listloc', ...
	'TooltipString','Possible locations for spawning', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''spawn'')', ...
	'ListboxTop',0, ...
	'Position',[316 280 52 32], ...
	'String','Spawn', ...
	'Tag','butspawn', ...
	'TooltipString','Spawn to the current parallel Matlab system');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[12 308 136 16], ...
	'String','Possible Spawn Locations', ...
	'Style','text', ...
	'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[8 124 432 100], ...
	'Style','frame', ...
	'Tag','Frame2');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[12 128 368 72], ...
	'Style','frame', ...
	'Tag','Frame3');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[16 200 176 16], ...
	'String','Virtual Machine', ...
	'Style','text', ...
	'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[20 180 84 16], ...
	'String','Work directory:', ...
	'Style','text', ...
	'Tag','StaticText1', ...
	'TooltipString','Work directory of Matlab instances spawned into this VM as primary');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[20 168 84 16], ...
	'String','Priority:', ...
	'Style','text', ...
	'Tag','StaticText1', ...
	'TooltipString','Priority of Matlab instances spawned into this VM as primary');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[20 156 84 16], ...
	'String','Try expression:', ...
	'Style','text', ...
	'Tag','StaticText1', ...
	'TooltipString','Expression to evaluate on a Matlab instance at startup');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[16 144 88 16], ...
	'String','Catch expression:', ...
	'Style','text', ...
	'Tag','StaticText1', ...
	'TooltipString','Expression to evaluate if the try expression generates an error');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Position',[16 132 88 16], ...
	'String','Runmode:', ...
	'Style','text', ...
	'Tag','StaticText1', ...
	'TooltipString','Spawn Matlab instances as background processes or with a Matlab console');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''del vm'')', ...
	'ListboxTop',0, ...
	'Position',[324 204 48 16], ...
	'String','Delete', ...
	'Tag','butdelvm', ...
	'TooltipString','Delete displayed Virtual Machine from system');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','addvmgui', ...
	'ListboxTop',0, ...
	'Position',[272 204 48 16], ...
	'String','Add', ...
	'Tag','butaddvm', ...
	'TooltipString','Add new Virtual Machine to system');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''refresh'',''vm'',''vmattr'',''redir'')', ...
	'ListboxTop',0, ...
	'Min',0, ...
	'Max',1, ...
	'Position',[94.40000000000001 204 64 16], ...
	'String',' ', ...
	'Style','popupmenu', ...
	'Tag','popvm', ...
	'TooltipString','Current Virtual Machines in system', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[104 180 272 16], ...
	'String','', ...
	'Style','text', ...
	'Tag','textwd');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[104 168 272 16], ...
	'String','', ...
	'Style','text', ...
	'Tag','textprio');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[104 156 272 16], ...
	'Style','text', ...
	'Tag','texttry');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[104 148 272 12], ...
	'Style','text', ...
	'Tag','textcatch');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[104 132 272 16], ...
	'String','', ...
	'Style','text', ...
	'Tag','textrunmode');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''refresh'',''vm'',''vmattr'',''redir'')', ...
	'ListboxTop',0, ...
	'Position',[220 204 48 16], ...
	'String','Refresh', ...
	'Tag','butrefreshvm', ...
	'TooltipString','Refresh list of virtual machines in the popup button');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''help'')', ...
	'ListboxTop',0, ...
	'Position',[388 288 52 16], ...
	'String','Help', ...
	'Tag','buthelp');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''save'')', ...
	'ListboxTop',0, ...
	'Position',[388 308 52 16], ...
	'String','Save', ...
	'Tag','butsave', ...
	'TooltipString','Save the current configuration for later use');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''refresh'',''hosts'')', ...
	'ListboxTop',0, ...
	'Position',[168 288 48 16], ...
	'String','Refresh', ...
	'Tag','butrefreshpvm', ...
	'TooltipString','Refresh host list');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','addhostgui', ...
	'ListboxTop',0, ...
	'Position',[168 264 48 16], ...
	'String','Add', ...
	'Tag','butaddhost', ...
	'TooltipString','Add new host to system');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''del host'')', ...
	'ListboxTop',0, ...
	'Position',[168 240 48 16], ...
	'String','Delete', ...
	'Tag','butdelhost', ...
	'TooltipString','Delete selected hosts (only host names allowed)');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'ListboxTop',0, ...
	'Position',[8 4 432 112], ...
	'Style','frame', ...
	'Tag','Frame4');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[12 100 168 12], ...
	'String','Current Matlab Instances', ...
	'Style','text', ...
	'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Position',[12 8 424 88], ...
	'String',' ', ...
	'Style','listbox', ...
	'Tag','listpmi', ...
	'TooltipString','Host, ID, Virtual Machines [,standard output file]', ...
	'UserData',262145, ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''refresh'',''pmi'')', ...
	'ListboxTop',0, ...
	'Position',[232 96 48 16], ...
	'String','Refresh', ...
	'Tag','butrefreshpmi', ...
	'TooltipString','Refresh list of Matlab instances');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''join vm'')', ...
	'ListboxTop',0, ...
	'Position',[284 96 48 16], ...
	'String','Join VM', ...
	'Tag','butjoinvm', ...
	'TooltipString','Make selected Matlab instances join a VM');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''quit vm'')', ...
	'ListboxTop',0, ...
	'Position',[332 96 48 16], ...
	'String','Quit VM', ...
	'Tag','butquitvm', ...
	'TooltipString','Make selected Matlab instances leave a virtual machine');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''killpmi'')', ...
	'ListboxTop',0, ...
	'Position',[384 96 48 16], ...
	'String','Kill', ...
	'Tag','butkillpmi', ...
	'TooltipString','Kill selected Matlab Instances');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Position',[388 132 48 60], ...
	'min',0,...
	'max',2,...
	'String',' ', ...
	'Style','listbox', ...
	'Tag','vm2', ...
	'TooltipString','Member of other Virtual Machines (an array of ids)', ...
	'Value',[]);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[380 192 56 12], ...
	'String','Other VMs', ...
	'Style','text', ...
	'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','closereq', ...
	'ListboxTop',0, ...
	'Position',[388 268 52 16], ...
	'String','Exit', ...
	'Tag','butexit', ...
	'TooltipString','Quit user interface');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'ListboxTop',0, ...
	'Position',[220 224 220 40], ...
	'Style','frame', ...
	'Tag','Frame5');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'Enable','off', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[224 228 212 16], ...
	'Style','edit', ...
	'Tag','editredir', ...
	'TooltipString','"Number" filenames for output redirection of consoles  in background');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Callback','pmcfg(''refresh'',''redir'')', ...
	'Enable','off', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[348 244 64 16], ...
	'String','Generate', ...
	'Style','checkbox', ...
	'Tag','checkgenerate', ...
	'TooltipString','Automatically generate filenames', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'Enable','off', ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[224 244 124 12], ...
	'String','Console stdout filenames', ...
	'Style','text', ...
	'Tag','textconsout');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'ListboxTop',0, ...
	'Position',[220 264 68 64], ...
	'Style','frame', ...
	'Tag','Frame6');
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[1 1 1], ...
	'HorizontalAlignment','right', ...
	'ListboxTop',0, ...
	'Max',99, ...
	'Position',[228 280 40 16], ...
	'String','1', ...
	'Style','edit', ...
	'Tag','num', ...
	'TooltipString','Number of Matlab instances to spawn on chosen location', ...
	'Value',1);
h1 = uicontrol('Parent',h0, ...
	'Units','points', ...
	'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[228 296 52 16], ...
	'String','Number', ...
	'Style','text', ...
	'Tag','StaticText1');
  end

  pmcfg('refresh','hosts','vm','vmattr','redir','pmi');  
  return;
end
  
try,

switch varargin{1}
   
  %-----------
  case 'refresh' 
  %-----------
  
  % the following arguments, 2..n, contain a list of what to refresh
  fig = gcbf;
  if ~strcmp('spawner',get(fig,'tag'))
    h0 = get(0,'children');
    for h = h0'
      if strcmp(get(h,'tag'),'spawner');
        fig = h;
        break;
      end
    end
  end

  for n=2:nargin
    switch varargin{n}
      
    case 'hosts'
      [nhost,narch,dtids,hosts,archs,speeds,info]=pvm_config;
      %%hosts = ['helium' ; 'xenon '];  %%
      %%archs = ['LINUX   ' ; 'SUN4SOL2']; %%
      hostlist = [{'*' ; 'localhost'} ; unique(cellstr(archs)) ; cellstr(hosts)];
      h_listloc = findobj(gcf,'tag','listloc');
      cval = get(h_listloc,'value');
      set(h_listloc,'value',min(cval,length(hostlist)),'string',hostlist);

     case 'vm'
      vms = vmids;
      if isempty(vms)
	vms = ' ';
      end
      
      h_popvm = findobj(fig,'tag','popvm');
      cval = get(h_popvm,'value');
      cval = min(cval,length(vms));
      
      set(h_popvm,'max',length(vms),'value',min(cval,length(vms)),'string',vms)
     
      h_vm2 = findobj(fig,'tag','vm2');
      if ~isempty(vms)
	vms(cval) = []; % do not list this in the other list
      end
      if isempty(vms)
	vms = ' ';
	cval = [];
      else
	cval = get(h_vm2,'value');
	cval = min(cval,length(vms));
      end
      set(h_vm2,'value',cval,'string',vms,'max',length(vms)+1);  
      
     case 'vmattr'
 
      h_popvm = findobj(fig,'tag','popvm');
      cval = get(h_popvm,'value');
      cs   = get(h_popvm,'string');
     
      if strcmp(' ',cs(1,:))
        cnf = cell2struct({'' '' '' '' ''}, ...
                          {'wd' 'prio' 'try' 'catch' 'runmode'},2);
      else
	cnf = vmget(str2num(cs(cval,:)));
      end
      set(findobj(fig,'tag','textwd'),'string',cnf.wd)
      set(findobj(fig,'tag','textprio'),'string',cnf.prio)
      set(findobj(fig,'tag','texttry'),'string',cnf.try)
      set(findobj(fig,'tag','textcatch'),'string',cnf.catch)
      set(findobj(fig,'tag','textrunmode'),'string',cnf.runmode)
    
     case 'redir'

      h_popvm = findobj(fig,'tag','popvm');
      cstr = get(h_popvm,'string');
      cval = get(h_popvm,'value');
      if strcmp(' ',cstr(cval,:))
        bg = 0;
      else
	vmid = str2num(cstr(cval,:));
	cnf = vmget(vmid);
	bg = strcmp('bg',cnf.runmode);
      end
      
      if bg
	text = 'on';
        if get(findobj(fig,'tag','checkgenerate'),'value')
	   edit = 'off';
        else
	   edit = 'on';
        end
      else
        text = 'off';
        edit = 'off';
      end
      set(findobj(fig,'tag','checkgenerate'),'enable',text)
      set(findobj(fig,'tag','textconsout'),'enable',text)
      set(findobj(fig,'tag','editredir'),'enable',edit)
               
     case 'pmi'
      
      % host , ID, VM, outredir

      pmi = pmall;
      pmi_list = cell(length(pmi),1);
      for m=1:length(pmi)
        conf_name = ['PMCONF' int2str(pmi(m))];
        bufid = pvm_recvinfo(conf_name,0,0);
        if bufid > 0
	  v = version;
	  if v(1) == '4'
	    cnf = pvme_upkmat;
	  else
	    cnf = pvme_upkarray;
	  end
        end 
	pvm_freebuf(bufid);
        pmlist{m} = [pmhostname(pmi(m)) ': ' int2str(pmi(m)) ', VM: ' ...
                     int2str(pmlistvm(pmi(m))) ', stdout -> ' ...
                     cnf.outredir];      
	if ~pmgetinfo(pmi(m))
	  pmlist{m} = [pmlist{m} ' in interactive mode'];
	end
      end
      
      h_pmi_list = findobj(fig,'tag','listpmi');
      set(h_pmi_list,'string',pmlist,'value',1,'max',length(pmlist), ...
                    'userdata',pmi)   

    end
  end

  %-----------
 case 'del vm'
  %-----------
  
  [obj,fig] = gcbo;
  h_popvm = findobj(fig,'tag','popvm');
  cval = get(h_popvm,'value');
  cs   = get(h_popvm,'string');

  if ~strcmp(' ',cs(1,:))
    if (vmdel(str2num(cs(cval,:)))) < 0
      error('could not delete VM because it has member Matlab instances')
    end
  end
  pmcfg('refresh','vm','vmattr');
  
  %-----------
 case 'del host'
  %-----------
  
  % which host?
  h_loc = findobj(gcbf,'tag','listloc');
  cs = get(h_loc,'string');
  cv = get(h_loc,'value');
  host = cs{cv};
  
  [nhost,narch,dtids,hosts,archs,speeds,info]=pvm_config;
  hosts = cellstr(hosts);
  
  if ~ismember(host,hosts)
    error('Trying to delete a non-existing host. Choose a hostname');
  end
  h_id = dtids(strcmp(host,hosts));
  
  if h_id == pvm_tidtohost(pmid)
    error('Cannot delete executing host')
  end
  
  % delete all matlab instances executing on this host
  pmi = pmothers;
  for id=pmi
    if pvm_tidtohost(id)==h_id
      pmkill(id);
    end
  end
  pvm_delhosts(host); % Kill host
  
  %-----------
 case 'spawn'
  %-----------
  
  fig = gcbf;

  h_loc = findobj(fig,'tag','listloc');
  cs = get(h_loc,'string');
  cv = get(h_loc,'value');
  host = cs{cv};
  
  h_num = findobj(fig,'tag','num');
  num = str2num(get(h_num,'string'));
  if num <1 | num > 99
    error('Not a valid number (0-99)');
  end
  
  h_popvm = findobj(fig,'tag','popvm');
  cs = get(h_popvm,'string');
  cv = get(h_popvm,'value');
  vms = str2num(cs(cv,:));
  if isempty(vms)
    error('no VM defined for spawning')
  end
  
  h_vmothers = findobj(fig,'tag','vm2');
  cs = get(h_vmothers,'string');
  cv = get(h_vmothers,'value');
  vmothers = str2num(cs);
  if ~isempty(vmothers)
    vmothers = vmothers(cv);
    vmothers(find(vmothers==vms)) = [];
    vms = [vms vmothers'];
  end
  
  % create output redirection filenames 
  if get(findobj(fig,'tag','checkgenerate'),'value') 
    outredir = cell(num,1);
    c = vmget(vms(1));
    for n=1:num
      outredir{n} = [c.wd '/' 'stdout_' strtok(host,'*.') int2str(n)];
    end
  else
    r = get(findobj(fig,'tag','editredir'),'string');
    n = 1;
    while ~isempty(r)
      [t,r] = strtok(r,' ;,');
      outredir{n,1} = t;
      n = n + 1;
    end
    if num ~= length(outredir)
       error(['You must enter the same number of outredirection ' ...
              'filenames as number of Matlab instances to spawn.'])'
    end
  end

  pmspawn(host,num,vms,outredir,'noblock','verbose');


  %-----------
 case 'killpmi'
  %-----------

  fig = gcbf;
  h_pmi_list = findobj(fig,'tag','listpmi');
  cud = get(h_pmi_list,'userdata');
  cv = get(h_pmi_list,'value');
  pmkill(cud(cv));
  pvm_delinfo(['PMVM' int2str(cud(cv))],0,0); % make sure it's not in the
                                              % list when refreshing
  pmcfg('refresh','pmi')

  %-----------
 case 'save'
  %-----------
   
  prompt = {'Filename'};
  def = {'pmconf'};
  answer = inputdlg(prompt, 'Save current configuration', 1, def);
  if ~isempty(answer)     
    pmconf = pmgetconf;
    save(answer{:},'pmconf');	
  end
 
  %---------------- 
 case 'join vm'
  h_pmilist = findobj(gcbf,'tag','listpmi');
  v = get(h_pmilist,'Value');
  pmi = get(h_pmilist,'UserData');
  pmi = pmi(v);
  vmid = inputdlg(['The operation will take place after the target' ; ...
		   'Matlab instance has terminated its current    ' ; ...
		   'evaluation. Enter VM id(s) separated by space ' ;...
		   'or comma):                                    '], ...
		  'Join Virtual Machine',1);
  if ~isempty(vmid)
    vmid = str2num(vmid{:});
    vmid = int2str(vmid);
    pmeval(pmi,['pmjoinvm([' vmid '])']);
  end
  
  %---------------- 
 case 'quit vm'
  h_pmilist = findobj(gcbf,'tag','listpmi');
  v = get(h_pmilist,'Value');
  pmi = get(h_pmilist,'UserData');
  pmi = pmi(v);
  vmid = inputdlg(['The operation will take place after the target'; ...
		   'Matlab instance has terminated its current    '; ...
		   'evaluation. Enter Virtual Machine id(s):      '], ...
		  'Quit Virtual Machine',1);
  if ~isempty(vmid)
    vmid = str2num(vmid{:});
    vmid = int2str(vmid);
    pmeval(pmi,['pmquitvm([' vmid '])']);
  end
  
end

catch
  errordlg(lasterr,'Error','replace')
end




